<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.edu.dao.RoleMapper">

    <!--  查询角色列表  -->
    <select id="findAllRole" parameterType="com.edu.domain.Role" resultType="com.edu.domain.Role">
        select id,code,name,description,created_time,updated_time,created_by,updated_by
        from roles
        <where>
            <if test="name != null and name != ''">
                and name = #{name}
            </if>
        </where>
    </select>

    <!--  根据角色ID查询菜单信息  -->
    <select id="findMenuByRoleId" parameterType="int" resultType="string">
        select m.id
        from roles r left join role_menu_relation rm
        on r.id = rm.role_id
        left join menu m on rm.menu_id = m.id where r.id = #{id}
    </select>

    <!--  删除角色菜单关联信息  -->
    <delete id="deleteRoleContextMenu" parameterType="int">
        delete from role_menu_relation where role_id = #{id}
    </delete>

    <!--  角色菜单关联  -->
    <insert id="roleContextMenu" parameterType="com.edu.domain.RoleMenuRelation">
        insert into role_menu_relation values(null,#{menuId},#{roleId},#{createdTime},#{updatedTime},#{createdBy},#{updatedBy})
    </insert>

    <!--  删除角色  -->
    <delete id="deleteRole" parameterType="int">
        delete from roles where id = #{id}
    </delete>

    <!--  添加角色  -->
    <insert id="saveRole" parameterType="com.edu.domain.Role">
        insert into roles values(null,#{code},#{name},#{description},#{createdTime},#{updatedTime},#{createdBy},#{updatedBy})
    </insert>

    <!--  修改角色  -->
    <update id="updateRole" parameterType="com.edu.domain.Role">
        update roles
        <trim prefix="set" suffixOverrides=",">
            <if test="name != null and name != ''">
                name = #{name},
            </if>
            <if test="code != null and code != ''">
                code = #{code},
            </if>
            <if test="description != null and description != ''">
                description = #{description},
            </if>
            <if test="updatedTime != null">
                updated_time = #{updatedTime},
            </if>
        </trim>
        <where>
            <if test="id != null and id != ''">
                id = #{id}
            </if>
        </where>
    </update>

    <!--  获取角色拥有的资源数据  -->
    <select id="findRoleHaveResourceCate" parameterType="int" resultMap="ResourceCate">
        SELECT
            rc.id,
            rc.name
        FROM resource_category	rc LEFT JOIN resource r ON rc.id = r.category_id
                                     LEFT JOIN role_resource_relation rrr ON r.id = rrr.resource_id LEFT JOIN
             roles rs ON rrr.role_id = rs.id WHERE rs.id = #{id} GROUP BY  rc.id;
    </select>

    <resultMap id="ResourceCate" type="com.edu.domain.ResourceCategory">
        <id column="id" property="id"/>
        <result column="name" property="name"/>
    </resultMap>

    <!--  获取角色拥有的资源数据  -->
    <select id="findRoleHaveResource" parameterType="int" resultType="com.edu.domain.Resource">
        SELECT
            rc.`id`,
            rc.`name`,
            rc.`category_id`
        FROM roles r  LEFT JOIN role_resource_relation rrr ON r.`id` = rrr.`role_id`
                      LEFT JOIN resource rc ON rrr.`resource_id` = rc.`id` WHERE r.id = #{id};
    </select>

    <!--  删除角色关联的资源数据 -->
    <delete id="deleteRoleContextResource" parameterType="int">
        DELETE FROM role_resource_relation WHERE role_id = #{id};
    </delete>

    <!-- 为角色分配资源   -->
    <insert id="roleContextResource" parameterType="com.edu.domain.RoleResourceRelation">
        INSERT INTO role_resource_relation
        VALUES(NULL,#{resourceId},#{roleId},#{createdTime},#{updatedTime},#{createdBy},#{updatedBy})
    </insert>

</mapper>